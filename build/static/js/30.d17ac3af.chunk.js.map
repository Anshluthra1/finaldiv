{"version":3,"sources":["../node_modules/d3-array/src/min.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../node_modules/fast-deep-equal/index.js"],"names":["min","values","valueof","undefined","value","index","TimeseriesLoader","windowWidth","window","innerWidth","width","height","viewBox","speed","cx","cy","r","Timeseries","lazy","retry","TimeseriesBrush","TimeseriesExplorer","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","hideVaccinated","t","useTranslation","useLocalStorage","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","isMovingAverage","setIsMovingAverage","stateCodeDateRange","Object","keys","dates","beginningDate","getIndiaDateYesterdayISO","endDate","length","useState","brushSelectionEnd","setBrushSelectionEnd","useEffect","brushSelectionStart","formatISO","subDays","parseIndiaDate","representation","explorerElement","useRef","isVisible","useIsVisible","once","useWindowSize","selectedRegion","useMemo","districts","districtName","selectedTimeseries","regions","states","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","brushSelectionDates","handleChange","useCallback","target","JSON","parse","resetDropdown","statistics","TIMESERIES_STATISTICS","statistic","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","ctype","htmlFor","id","type","checked","aria-label","onChange","disabled","stringify","fallback","currentBrushSelection","animationIndex","animationDelay","TIMESERIES_LOOKBACK_DAYS","numDays","selected","isEqual","prevProps","currProps","forceRender","equal","memo","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","key"],"mappings":"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","file":"static/js/30.d17ac3af.chunk.js","sourcesContent":["export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth > 769 ? 480 : windowWidth;\n  const height = 200 * 6;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  STATE_NAMES,\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACK_DAYS,\n  TIMESERIES_STATISTICS,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport {PinIcon, ReplyIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {min} from 'd3-array';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  lazy,\n  Suspense,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useWindowSize} from 'react-use';\n\nconst Timeseries = lazy(() => retry(() => import('./Timeseries')));\nconst TimeseriesBrush = lazy(() => retry(() => import('./TimeseriesBrush')));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable = false,\n  hideVaccinated = false,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage(\n    'isMovingAverage',\n    false\n  );\n\n  const stateCodeDateRange = Object.keys(timeseries?.[stateCode]?.dates || {});\n  const beginningDate =\n    stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\n  const endDate = min([\n    stateCodeDateRange[stateCodeDateRange.length - 1],\n    timelineDate || getIndiaDateYesterdayISO(),\n  ]);\n\n  const [brushSelectionEnd, setBrushSelectionEnd] = useState(endDate);\n  useEffect(() => {\n    setBrushSelectionEnd(endDate);\n  }, [endDate]);\n\n  const brushSelectionStart =\n    lookback !== null\n      ? formatISO(subDays(parseIndiaDate(brushSelectionEnd), lookback), {\n          representation: 'date',\n        })\n      : beginningDate;\n\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n  const {width} = useWindowSize();\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(\n    () =>\n      Object.keys(selectedTimeseries || {}).filter((date) => date <= endDate),\n    [selectedTimeseries, endDate]\n  );\n\n  const brushSelectionDates = useMemo(\n    () =>\n      dates.filter(\n        (date) => brushSelectionStart <= date && date <= brushSelectionEnd\n      ),\n    [dates, brushSelectionStart, brushSelectionEnd]\n  );\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  const statistics = useMemo(\n    () =>\n      TIMESERIES_STATISTICS.filter(\n        (statistic) =>\n          (statistic !== 'vaccinated' || !hideVaccinated) &&\n          (chartType === 'delta' || statistic !== 'tpr')\n      ),\n    [chartType, hideVaccinated]\n  );\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{\n        display:\n          anchor && anchor !== 'timeseries' && (!expandTable || width < 769)\n            ? 'none'\n            : '',\n      }}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', 'fadeInUp', {\n            stickied: anchor === 'timeseries',\n          })}\n          style={{\n            display: expandTable && width > 769 ? 'none' : '',\n          }}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"timeseries-options\">\n          <div className=\"scale-modes\">\n            <label className=\"main\">{`${t('Scale Modes')}:`}</label>\n            <div className=\"timeseries-mode\">\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n              <input\n                id=\"timeseries-mode\"\n                type=\"checkbox\"\n                className=\"switch\"\n                checked={isUniform}\n                aria-label={t('Checked by default to scale uniformly.')}\n                onChange={setIsUniform.bind(this, !isUniform)}\n              />\n            </div>\n            <div\n              className={`timeseries-mode ${\n                chartType !== 'total' ? 'disabled' : ''\n              }`}\n            >\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n              <input\n                id=\"timeseries-logmode\"\n                type=\"checkbox\"\n                checked={chartType === 'total' && isLog}\n                className=\"switch\"\n                disabled={chartType !== 'total'}\n                onChange={setIsLog.bind(this, !isLog)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={`timeseries-mode ${\n              chartType === 'total' ? 'disabled' : ''\n            } moving-average`}\n          >\n            <label htmlFor=\"timeseries-moving-average\">\n              {t('7 day Moving Average')}\n            </label>\n            <input\n              id=\"timeseries-moving-average\"\n              type=\"checkbox\"\n              checked={chartType === 'delta' && isMovingAverage}\n              className=\"switch\"\n              disabled={chartType !== 'delta'}\n              onChange={setIsMovingAverage.bind(this, !isMovingAverage)}\n            />\n          </div>\n        </div>\n      </div>\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            dates={brushSelectionDates}\n            {...{\n              statistics,\n              endDate,\n              chartType,\n              isUniform,\n              isLog,\n              isMovingAverage,\n            }}\n          />\n          <TimeseriesBrush\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            currentBrushSelection={[brushSelectionStart, brushSelectionEnd]}\n            animationIndex={statistics.length}\n            {...{dates, endDate, lookback, setBrushSelectionEnd, setLookback}}\n          />\n        </Suspense>\n      )}\n      {!isVisible && <div style={{height: '50rem'}} />}\n      <div\n        className=\"pills fadeInUp\"\n        style={{animationDelay: `${(1 + statistics.length) * 250}ms`}}\n      >\n        {TIMESERIES_LOOKBACK_DAYS.map((numDays) => (\n          <button\n            key={numDays}\n            type=\"button\"\n            className={classnames({\n              selected: numDays === lookback,\n            })}\n            onClick={setLookback.bind(this, numDays)}\n          >\n            {numDays !== null ? `${numDays} ${t('days')}` : t('Beginning')}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  } else if (!equal(currProps.hideVaccinated, prevProps.hideVaccinated)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(TimeseriesExplorer, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}