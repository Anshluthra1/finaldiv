{"version":3,"sources":["components/MapLegend.js","components/MapVisualizer.js"],"names":["MapLegend","data","mapViz","mapScale","t","useTranslation","svgRef","useRef","useMeasure","wrapperRef","width","height","useEffect","svg","select","current","MAP_VIZS","BUBBLES","transition","duration","D3_TRANSITION_DURATION","attr","selectAll","remove","text","domainMax","domain","join","d","yScale","copy","range","call","axisRight","tickSize","tickPadding","tickValues","tickFormat","num","formatNumber","style","g","color","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","x","tickAdjust","interpolate","n","Math","min","length","rangeRound","quantize","ramp","toDataURL","interpolator","Object","assign","interpolateRound","undefined","round","map","i","quantile","format","invertExtent","thresholds","quantiles","thresholdFormat","scaleLinear","append","widthScale","reduce","a","b","xPos","w","slice","acc","scaleOrdinal","enter","scaleBand","max","bandwidth","axisBottom","on","node","legend","CHOROPLETH","Number","isInteger","className","MAP_LEGEND_HEIGHT","ref","id","preserveAspectRatio","position","canvas","context","getContext","fillStyle","fillRect","MapVisualizer","mapCode","isDistrictView","regionHighlighted","changeMap","setRegionHighlighted","statistic","getStatistic","isCountryLoaded","mapMeta","MAP_META","history","useHistory","geoData","useSWR","geoDataFile","file","json","suspense","revalidateOnFocus","statisticMax","useMemo","stateCodes","keys","filter","stateCode","includes","districts","values","districtData","statisticTotal","scaleSqrt","clamp","nice","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","colorInterpolator","path","geoPath","geoIdentity","fillColor","useCallback","STATE_CODES","properties","st_nm","district","stateData","strokeColor","alpha","STATISTIC_CONFIGS","features","mapType","MAP_TYPES","COUNTRY","feature","objects","states","state","obj","populateTexts","regionSelection","toTitleCase","onceTouchedRegion","districtName","T","event","update","exit","stopPropagation","STATE","push","window","innerWidth","sel","bind","circlesData","value","UNKNOWN_DISTRICT_KEY","sort","featureA","featureB","centroid","requestIdleCallback","meshStates","meshDistricts","mesh","stateName","STATE_NAMES","each","highlighted","this","parentNode","appendChild","viewBox","classnames","colorInterpolationFilters","type"],"mappings":"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","file":"static/js/40.3321cc3b.chunk.js","sourcesContent":["import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_VIZS,\n} from '../constants';\nimport {formatNumber} from '../utils/commonFunctions';\n\nimport {range, quantile} from 'd3-array';\nimport {axisRight, axisBottom} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\nfunction MapLegend({data, mapViz, mapScale}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n  const [wrapperRef, {width, height}] = useMeasure();\n\n  useEffect(() => {\n    if (!width || !height) return;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat((num) => formatNumber(num, 'short'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          // title: `${t(capitalize(statistic))} ${t('cases')}`,\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 0,\n        })\n      );\n    }\n  }, [t, width, height, mapScale, mapViz]);\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{height: MAP_LEGEND_HEIGHT}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? format(tickFormat)\n        : tickFormat;\n\n    x = scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, toTitleCase} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n} from 'd3-scale-chromatic';\nimport {select} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport {feature, mesh} from 'topojson-client';\n\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = (statistic) => {\n  switch (statistic) {\n    case 'confirmed':\n      return (t) => interpolateReds(t * 0.85);\n    case 'active':\n      return (t) => interpolateBlues(t * 0.85);\n    case 'recovered':\n      return (t) => interpolateGreens(t * 0.85);\n    case 'deceased':\n      return (t) => interpolateGreys(t * 0.85);\n    case 'tested':\n      return (t) => interpolatePurples(t * 0.85);\n    default:\n      return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nfunction MapVisualizer({\n  mapCode,\n  isDistrictView,\n  mapViz,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  getStatistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await json(file);\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    return !isDistrictView\n      ? max(stateCodes, (stateCode) => getStatistic(data[stateCode]))\n      : max(stateCodes, (stateCode) =>\n          data[stateCode]?.districts\n            ? max(Object.values(data[stateCode].districts), (districtData) =>\n                getStatistic(districtData)\n              )\n            : 0\n        );\n  }, [data, isDistrictView, getStatistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getStatistic(data[mapCode]);\n  }, [data, mapCode, getStatistic]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return scaleSequential(\n        [0, Math.max(1, statisticMax)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  const fillColor = useCallback(\n    (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      let n;\n      if (district) n = getStatistic(districtData);\n      else n = getStatistic(stateData);\n      const color = n === 0 ? '#ffffff00' : mapScale(n);\n      return color;\n    },\n    [data, mapScale, getStatistic]\n  );\n\n  const strokeColor = useCallback(\n    (alpha) => {\n      return STATISTIC_CONFIGS[statistic].color + alpha;\n    },\n    [statistic]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap = !isDistrictView\n      ? feature(geoData, geoData.objects.states).features\n      : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\n      ? [\n          ...feature(geoData, geoData.objects.states).features,\n          ...feature(geoData, geoData.objects.districts).features,\n        ]\n      : feature(geoData, geoData.objects.districts).features;\n\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, isDistrictView, mapViz, mapMeta]);\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz === MAP_VIZS.BUBBLES) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getStatistic(districtData);\n          else n = getStatistic(stateData);\n          return (\n            formatNumber(100 * (n / (statisticTotal || 0.001))) +\n            '% from ' +\n            toTitleCase(district ? district : state)\n          );\n        }\n      });\n    },\n    [mapViz, data, getStatistic, statisticTotal]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (event, d) => {\n              if (onceTouchedRegion.current) return;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .on('pointerdown', (event, d) => {\n              if (onceTouchedRegion.current === d)\n                onceTouchedRegion.current = null;\n              else onceTouchedRegion.current = d;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('click', (event, d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  // Bubble\n  useEffect(() => {\n    if (!features) return;\n\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (!isDistrictView) {\n            feature.value = getStatistic(stateData);\n          } else {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName) feature.value = getStatistic(districtData);\n            else\n              feature.value = getStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY]\n              );\n          }\n\n          return feature;\n        })\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n\n    const regionSelection = svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (feature) => feature.id)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (event, feature) => {\n        if (onceTouchedRegion.current) return;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('pointerdown', (event, feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('click', (event, feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', STATISTIC_CONFIGS[statistic].color + '70')\n          .attr('stroke', STATISTIC_CONFIGS[statistic].color + '70')\n          .attr('r', (feature) => mapScale(feature.value));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    isDistrictView,\n    data,\n    features,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    populateTexts,\n    statistic,\n    getStatistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (isDistrictView && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    isDistrictView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    isDistrictView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getStatistic(data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY]) && (\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\n              <AlertIcon />\n              <span>\n                {t('District-wise data not available in state bulletin')}\n              </span>\n            </div>\n          )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, mapViz, mapScale}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  );\n}\n\nexport default MapVisualizer;\n"],"sourceRoot":""}